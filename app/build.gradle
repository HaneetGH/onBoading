plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
}
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.technorapper.onboarding"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }
    kapt {
        javacOptions {
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module']
        }
    }

    dataBinding {
        enabled = true
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
}


dependencies {

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    def activity_version = "1.4.0"
    def fragment_version = "1.4.0"
    def lifecycle_version = "2.4.0"
    def gson = "2.8.8"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    implementation("com.squareup.okhttp3:logging-interceptor:4.9.1")
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'androidx.room:room-runtime:2.4.1'

    annotationProcessor 'androidx.room:room-compiler:2.4.1'
    androidTestImplementation 'androidx.room:room-testing:2.4.1'

    def room_version = "2.4.1" // check latest version from docs

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Utils
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    //google Play
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.5.0'

    implementation('com.github.thekhaeng:pushdown-anim-click:1.1.1') {
        exclude group: 'com.android.support'
    }
    testImplementation 'org.mockito:mockito-core:3.2.4'
    androidTestImplementation 'org.mockito:mockito-android:2.24.5'
    // Required -- JUnit 4 framework
    testImplementation 'junit:junit:4.13.2'
    // Optional -- Robolectric environment
    testImplementation 'androidx.test:core:1.4.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    testImplementation 'org.hamcrest:hamcrest-library:2.2'

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation ':junitjunit:4.12'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
    implementation "io.ktor:ktor-client-android:1.2.5"
    debugImplementation("androidx.fragment:fragment-testing:1.4.0")

// Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.1.0')
    implementation 'com.google.android.gms:play-services-safetynet:18.0.1'
    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth'



    // When using the BoM, you don't specify versions in Firebase library dependencies

    // Declare the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics'
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
}
